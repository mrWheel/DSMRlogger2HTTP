{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentatie DSMRlogger2HTTP Voor de project beschrijving ga naar www.aandewiel.nl Inhoudsopgave Introductie Voorbereiding ArduinoIDE ESP8266 core Data Upload Tool Firmware Benodigd Bibliotheken Installeren Bibliotheken DSMR Firmware van Github Firmware Flashen ESP-01 Data Flashen naar ESP-01 Hardware DSMR-logger Versie 3 Programmer voor de ESP-01 Overigen Eeste keer opstarten Verschillen ESP-01 modules [ScreenShot DSMR-Actueel]","title":"Documentatie DSMRlogger2HTTP"},{"location":"#documentatie-dsmrlogger2http","text":"Voor de project beschrijving ga naar www.aandewiel.nl","title":"Documentatie DSMRlogger2HTTP"},{"location":"#inhoudsopgave","text":"Introductie Voorbereiding ArduinoIDE ESP8266 core Data Upload Tool Firmware Benodigd Bibliotheken Installeren Bibliotheken DSMR Firmware van Github Firmware Flashen ESP-01 Data Flashen naar ESP-01 Hardware DSMR-logger Versie 3 Programmer voor de ESP-01 Overigen Eeste keer opstarten Verschillen ESP-01 modules [ScreenShot DSMR-Actueel]","title":"Inhoudsopgave"},{"location":"MITlicense/","text":"MIT License Copyright \u00a9 2018 - 2019 Willem Aandewiel Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"MITlicense/#mit-license","text":"Copyright \u00a9 2018 - 2019 Willem Aandewiel Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"benodigdeBibliotheken/","text":"Benodigde Bibliotheken Voor de DSMRlogger2HTTP firmware zijn de volgende bibliotheken nodig: dsmr Deze library is ontwikkeld door Matthijs Kooijman en vormt het hart van de DSMR-logger. Je kunt de bibliotheek hier https://github.com/matthijskooijman/arduino-dsmr downloaden. De firmware is getest met Version 0.1 - Commit f79c906 on 18 Sep 2018 . TimeLib Deze is door Paul Stoffregen ontwikkeld. Je kunt hem hier https://github.com/PaulStoffregen/Time downloaden. WiFiManager Je kunt de, door Tzapu ontwikkelde, bibliotheek hier https://github.com/tzapu/WiFiManager downloaden. De DSMR-logger firmware is getest met version 0.14.0 van deze bibliotheek. TelnetStream Deze bibliotheek is door Jan Drassy ontwikkeld. Je kunt deze bibliotheek hier https://github.com/jandrassy/TelnetStream downloaden. De firmware is getest met version 0.0.1 . Let op: De installatie van deze bibliotheek gaat net als de andere bibliotheken. Een update kan echter pas ge\u00efnstalleerd worden als \u00e9\u00e9rst de map TelnetStream-master uit de map Libraries wordt verwijderd! Overige libraries Onderstaande libraries zijn onderdeel van de ESP8266 Core en moeten dus niet handmatig ge\u00efnstalleerd worden ! * ESP8266WiFi * ESP8266WebServer * FS * ArduinoOTA [Slimme Meter]","title":"Benodigd Bibliotheken"},{"location":"benodigdeBibliotheken/#benodigde-bibliotheken","text":"Voor de DSMRlogger2HTTP firmware zijn de volgende bibliotheken nodig:","title":"Benodigde Bibliotheken"},{"location":"benodigdeBibliotheken/#dsmr","text":"Deze library is ontwikkeld door Matthijs Kooijman en vormt het hart van de DSMR-logger. Je kunt de bibliotheek hier https://github.com/matthijskooijman/arduino-dsmr downloaden. De firmware is getest met Version 0.1 - Commit f79c906 on 18 Sep 2018 .","title":"dsmr"},{"location":"benodigdeBibliotheken/#timelib","text":"Deze is door Paul Stoffregen ontwikkeld. Je kunt hem hier https://github.com/PaulStoffregen/Time downloaden.","title":"TimeLib"},{"location":"benodigdeBibliotheken/#wifimanager","text":"Je kunt de, door Tzapu ontwikkelde, bibliotheek hier https://github.com/tzapu/WiFiManager downloaden. De DSMR-logger firmware is getest met version 0.14.0 van deze bibliotheek.","title":"WiFiManager"},{"location":"benodigdeBibliotheken/#telnetstream","text":"Deze bibliotheek is door Jan Drassy ontwikkeld. Je kunt deze bibliotheek hier https://github.com/jandrassy/TelnetStream downloaden. De firmware is getest met version 0.0.1 . Let op: De installatie van deze bibliotheek gaat net als de andere bibliotheken. Een update kan echter pas ge\u00efnstalleerd worden als \u00e9\u00e9rst de map TelnetStream-master uit de map Libraries wordt verwijderd!","title":"TelnetStream"},{"location":"benodigdeBibliotheken/#overige-libraries","text":"Onderstaande libraries zijn onderdeel van de ESP8266 Core en moeten dus niet handmatig ge\u00efnstalleerd worden ! * ESP8266WiFi * ESP8266WebServer * FS * ArduinoOTA [Slimme Meter]","title":"Overige libraries"},{"location":"clonenFirmware/","text":"Clonen Firmware De DSMRlogger2HTTP firmware staat hier https://github.com/mrWheel/DSMRlogger2HTTP . Er zijn twee manieren om de firmware te clonen. download de repository als een .zip file gebruik git Als je niet handig bent met git raad ik je aan de repository als een .zip file te downloaden. Download .zip file Klik op de groene knop [Clone or Download] en selecteer [Download ZIP] Er volgt een scherm als dit: Bewaar het .zip bestand op een plek op je computer waar je hem terug kunt vinden. Unzip het DSMRlogger2HTTP-master.zip bestand in de ArduinoIDE Sketchbook Location . Rename de map DSMRlogger2HTTP-master naar DSMRlogger2HTTP (dus zonder -master ) Ga verder naar DSMRlogger2HTTP Sketch openen git clone Om de repository met git te kunnen clonen moet je er \u00e9\u00e9rst voor zorgen dat je git op je systeem hebt staan. Hoe je dat moet doen valt buiten de scope van deze documentatie maar hier kun je alles vinden over hoe je dit, voor jouw systeem, moet doen. Voor nu ga ik ervan uit dat je git op je systeem hebt staan en dat je weet hoe je ermee moet werken. Ga naar de Arduino Sketchbook location (de map waar al je Sketches in staan, kijk hier ) en toets het volgende commando in: git clone https://github.com/mrWheel/DSMRlogger2HTTP.git That's it! In Sketchbook location staat hierna een nieuwe map met de naam DSMRlogger2HTTP . DSMRlogger2HTTP Sketch openen Start de ArduinoIDE opnieuw op en klik op het open icoon . Selecteer in het drop-down menu .. .. de sketch DSMRlogger2HTTP Er verschijnt een nieuw editor window met de firmware van de DSMRlogger! [DSMR 3D]","title":"DSMR-Firmware"},{"location":"clonenFirmware/#clonen-firmware","text":"De DSMRlogger2HTTP firmware staat hier https://github.com/mrWheel/DSMRlogger2HTTP . Er zijn twee manieren om de firmware te clonen. download de repository als een .zip file gebruik git Als je niet handig bent met git raad ik je aan de repository als een .zip file te downloaden.","title":"Clonen Firmware"},{"location":"clonenFirmware/#download-zip-file","text":"Klik op de groene knop [Clone or Download] en selecteer [Download ZIP] Er volgt een scherm als dit: Bewaar het .zip bestand op een plek op je computer waar je hem terug kunt vinden. Unzip het DSMRlogger2HTTP-master.zip bestand in de ArduinoIDE Sketchbook Location . Rename de map DSMRlogger2HTTP-master naar DSMRlogger2HTTP (dus zonder -master ) Ga verder naar DSMRlogger2HTTP Sketch openen","title":"Download .zip file"},{"location":"clonenFirmware/#git-clone","text":"Om de repository met git te kunnen clonen moet je er \u00e9\u00e9rst voor zorgen dat je git op je systeem hebt staan. Hoe je dat moet doen valt buiten de scope van deze documentatie maar hier kun je alles vinden over hoe je dit, voor jouw systeem, moet doen. Voor nu ga ik ervan uit dat je git op je systeem hebt staan en dat je weet hoe je ermee moet werken. Ga naar de Arduino Sketchbook location (de map waar al je Sketches in staan, kijk hier ) en toets het volgende commando in: git clone https://github.com/mrWheel/DSMRlogger2HTTP.git That's it! In Sketchbook location staat hierna een nieuwe map met de naam DSMRlogger2HTTP .","title":"git clone"},{"location":"clonenFirmware/#dsmrlogger2http-sketch-openen","text":"Start de ArduinoIDE opnieuw op en klik op het open icoon . Selecteer in het drop-down menu .. .. de sketch DSMRlogger2HTTP Er verschijnt een nieuw editor window met de firmware van de DSMRlogger! [DSMR 3D]","title":"DSMRlogger2HTTP Sketch openen"},{"location":"eersteKeerOpstarten/","text":"Eerste keer opstarten Haal de ESP01 van de programmer/breadboard af en stop hem in de socket van de logger. Sluit de logger aan op de P1 poort van de \"slimme meter\". Hij zal gaan booten en maakt zijn eigen accesspoint. Dit kun je zien aan het blauwe ledje wat zal gaan knipperen en daarna constant blijft branden. Via je computer/mobiel, bekijk de Wifi netwerken, hier zul je een ESP01\u2011DSMR\u2011xx\u2011<IPaddress> tussen zien staan: connect aan dit AccessPoint (AP). Zodra je verbonden bent, open de browser en ga naar ip adres wat de naam van het accesspoint staat bijv 192.168.5.1 Klik op Configure WiFi Selecteer je eigen WiFi router Typ het password Klik save De logger zal rebooten en verbinding maken met jouw WiFi router Tijdens het opstarten kun je aan de blauwe led zien wat de DSMR-logger aan het doen is: 3 x langzaam knipperen \u2013 initi\u00eble start 5 x snel knipperen \u2013 verbinding gemaakt met WiFi netwerk Daarna knippert de blauwe led iedere keer als er een nieuw telegram verwerkt wordt. Als de led, na de eerste drie keer langzaam knipperen blijft branden, dan kon de DSMR-logger geen verbinding met jouw WiFi netwerk maken en start hij weer zijn eigen AP op en zal je WiFi procedure opnieuw moeten doen. Zodra hij geconnecteerd is open een browser en ga naar: http://ESP01-DSMR.local/ of http://<IPadresVanDeLogger>/ Als je in de browser de tekst FileNotFound ziet, dan ben je waarschijnlijk vergeten de Data-map te uploaden met de menu-optie ESP8266 Sketch Data Upload in de ArduinoIDE ( kijk hier hoe dat moet). Als alles goed is gegaan zie je in de browser de hoofd-pagina van de DSMR-logger met daarin de actuele data uit de Slimme Meter. Je kunt met telnet ESP01-DSMR.local of met telnet <IPadresVanDeLogger> inloggen op je DSMR-logger en volgen waar de DSMR-logger mee bezig is. Om te bepalen welk IP is uitgegeven aan de ESP door de DHCP server, kun je in je router kijken, of met bijv de Fing app of met nmap . Een andere manier om achter het IP-adres van je DSMR-logger te komen is door de ArduinoIDE op te starten. Onder Network Ports staat de ESP01-DSMR als optie, met daarachter het IP adres (in dit voorbeeld is dat 192.168.12.142 ).","title":"Eerste keer opstarten"},{"location":"eersteKeerOpstarten/#eerste-keer-opstarten","text":"Haal de ESP01 van de programmer/breadboard af en stop hem in de socket van de logger. Sluit de logger aan op de P1 poort van de \"slimme meter\". Hij zal gaan booten en maakt zijn eigen accesspoint. Dit kun je zien aan het blauwe ledje wat zal gaan knipperen en daarna constant blijft branden. Via je computer/mobiel, bekijk de Wifi netwerken, hier zul je een ESP01\u2011DSMR\u2011xx\u2011<IPaddress> tussen zien staan: connect aan dit AccessPoint (AP). Zodra je verbonden bent, open de browser en ga naar ip adres wat de naam van het accesspoint staat bijv 192.168.5.1 Klik op Configure WiFi Selecteer je eigen WiFi router Typ het password Klik save De logger zal rebooten en verbinding maken met jouw WiFi router Tijdens het opstarten kun je aan de blauwe led zien wat de DSMR-logger aan het doen is: 3 x langzaam knipperen \u2013 initi\u00eble start 5 x snel knipperen \u2013 verbinding gemaakt met WiFi netwerk Daarna knippert de blauwe led iedere keer als er een nieuw telegram verwerkt wordt. Als de led, na de eerste drie keer langzaam knipperen blijft branden, dan kon de DSMR-logger geen verbinding met jouw WiFi netwerk maken en start hij weer zijn eigen AP op en zal je WiFi procedure opnieuw moeten doen. Zodra hij geconnecteerd is open een browser en ga naar: http://ESP01-DSMR.local/ of http://<IPadresVanDeLogger>/ Als je in de browser de tekst FileNotFound ziet, dan ben je waarschijnlijk vergeten de Data-map te uploaden met de menu-optie ESP8266 Sketch Data Upload in de ArduinoIDE ( kijk hier hoe dat moet). Als alles goed is gegaan zie je in de browser de hoofd-pagina van de DSMR-logger met daarin de actuele data uit de Slimme Meter. Je kunt met telnet ESP01-DSMR.local of met telnet <IPadresVanDeLogger> inloggen op je DSMR-logger en volgen waar de DSMR-logger mee bezig is. Om te bepalen welk IP is uitgegeven aan de ESP door de DHCP server, kun je in je router kijken, of met bijv de Fing app of met nmap . Een andere manier om achter het IP-adres van je DSMR-logger te komen is door de ArduinoIDE op te starten. Onder Network Ports staat de ESP01-DSMR als optie, met daarachter het IP adres (in dit voorbeeld is dat 192.168.12.142 ).","title":"Eerste keer opstarten"},{"location":"gh-pages/","text":"Github pages onderhouden Voer, in een command window, de volgende commando's in: cd <waar je de boel wilt hebben> git clone https://github.com/mrWheel/DSMRloggerHTTP.git cd DSMRloggerHTTP git checkout gh-pages cd mkdocs In de mkdocs map zit een map docs met daarin alle .md bestanden. Pas deze naar hartelust aan. Je kunt vervolgens lokaal een server starten met het commando: mkdocs serve Ga vervolgens met een browser naar http://127.0.0.1:8000 om je werk te bekijken. Als je tevreden bent dan moet je de aangepaste sources naar github pushen: mkdocs build mkdocs gh-deploy git add mkdocs git commit -m \"reden van deze commit\" git push -u origin gh-pages Klaar!","title":"Github pages onderhouden"},{"location":"gh-pages/#github-pages-onderhouden","text":"Voer, in een command window, de volgende commando's in: cd <waar je de boel wilt hebben> git clone https://github.com/mrWheel/DSMRloggerHTTP.git cd DSMRloggerHTTP git checkout gh-pages cd mkdocs In de mkdocs map zit een map docs met daarin alle .md bestanden. Pas deze naar hartelust aan. Je kunt vervolgens lokaal een server starten met het commando: mkdocs serve Ga vervolgens met een browser naar http://127.0.0.1:8000 om je werk te bekijken. Als je tevreden bent dan moet je de aangepaste sources naar github pushen: mkdocs build mkdocs gh-deploy git add mkdocs git commit -m \"reden van deze commit\" git push -u origin gh-pages Klaar!","title":"Github pages onderhouden"},{"location":"hardware_ESP01_Programmer/","text":"Programmer voor de ESP-01 Je kunt hier (www.aandewiel.nl) een post vinden met instructies hoe je eenvoudige een programmer voor de ESP-01 kunt maken. [DSMR-logger v3]","title":"Programmer ESP-01"},{"location":"hardware_ESP01_Programmer/#programmer-voor-de-esp-01","text":"Je kunt hier (www.aandewiel.nl) een post vinden met instructies hoe je eenvoudige een programmer voor de ESP-01 kunt maken. [DSMR-logger v3]","title":"Programmer voor de ESP-01"},{"location":"hardware_V3/","text":"DSMR-logger Versie 3 Hoe je een DSMRlogger Versie 2 kunt bouwen staat hier uitvoerig beschreven. Versie 3 is gelijk aan Versie 2 met dit verschil dat de transistor en voltage regulator eenvoudiger zijn te solderen omdat de pad's verder uit elkaar staan. Versie 3 heeft ook een RJ12 connector waardoor de draadbreuken die met Versie 2 nog wel eens voorkwamen verleden tijd zijn. Een bouwpakket voor Versie 3 kun je hier bestellen. Inhoud Opencircuit bouwpakket Aantal Itemi PCB label 1x PCB - 1x ESP8266 ESP-01S - 1x BC547 Q1 1x MCP1700-3v3 U1 1x 1K \u03a9 weerstand (bruin,zwart,rood) R1 2x 2K2 \u03a9 weerstand (rood,rood,rood) R2,R3 3x 10K \u03a9 weerstand (bruin,zwart,oranje) R4,R5,R6 1x Elco 1\u00b5F C1 1x Elco 2.2\u00b5F C2 1x Elco 1000\u00b5F C3 1x Socket connector 4x2 J2 1x RJ12 Socket connector J1 1x RJ12 kabel - Solderen Begin met de laagste componenten: Plaats: R4, R5 en R6, plaats deze plat. Weerstanden hebben geen polariteit, de richting maakt dus niet uit. Plaats R1, R2, R3 rechtop. Plaats Q1 en U1 - de soldeer pads zijn klein en liggen dicht bij elkaar, wees zorgvuldig en neem de tijd. De Elco's hebben wel polariteit, de negatieve pool is herkenbaar aan de lichtere streep op de zijkant. Op de PCB is deze kant aangegeven met een witte helft. Daar moet de negatieve pool op worden aangesloten. Plaats C1, C2 en C3 met de juiste negatieve pool en de correcte Elco. Plaats J2 en J1 Controleer je werk op slechte soldeerverbindingen (het tin droogt dan mat op) en kortsluiting (tin-bruggen tussen twee pad's). De ESP01 word uiteindelijk in de socket geplaatst, maar moet eerst nog worden geflashed met de DSMRlogger2HTTP firmware en de data -map moet naar SPIFFS worden ge-upload voordat hij kan gaan loggen. Hoe dat moet staat hier en hier beschreven. [PCB Versie 2]","title":"DSMRlogger v3"},{"location":"hardware_V3/#dsmr-logger-versie-3","text":"Hoe je een DSMRlogger Versie 2 kunt bouwen staat hier uitvoerig beschreven. Versie 3 is gelijk aan Versie 2 met dit verschil dat de transistor en voltage regulator eenvoudiger zijn te solderen omdat de pad's verder uit elkaar staan. Versie 3 heeft ook een RJ12 connector waardoor de draadbreuken die met Versie 2 nog wel eens voorkwamen verleden tijd zijn. Een bouwpakket voor Versie 3 kun je hier bestellen.","title":"DSMR-logger Versie 3"},{"location":"hardware_V3/#inhoud-opencircuit-bouwpakket","text":"Aantal Itemi PCB label 1x PCB - 1x ESP8266 ESP-01S - 1x BC547 Q1 1x MCP1700-3v3 U1 1x 1K \u03a9 weerstand (bruin,zwart,rood) R1 2x 2K2 \u03a9 weerstand (rood,rood,rood) R2,R3 3x 10K \u03a9 weerstand (bruin,zwart,oranje) R4,R5,R6 1x Elco 1\u00b5F C1 1x Elco 2.2\u00b5F C2 1x Elco 1000\u00b5F C3 1x Socket connector 4x2 J2 1x RJ12 Socket connector J1 1x RJ12 kabel -","title":"Inhoud Opencircuit bouwpakket"},{"location":"hardware_V3/#solderen","text":"Begin met de laagste componenten: Plaats: R4, R5 en R6, plaats deze plat. Weerstanden hebben geen polariteit, de richting maakt dus niet uit. Plaats R1, R2, R3 rechtop. Plaats Q1 en U1 - de soldeer pads zijn klein en liggen dicht bij elkaar, wees zorgvuldig en neem de tijd. De Elco's hebben wel polariteit, de negatieve pool is herkenbaar aan de lichtere streep op de zijkant. Op de PCB is deze kant aangegeven met een witte helft. Daar moet de negatieve pool op worden aangesloten. Plaats C1, C2 en C3 met de juiste negatieve pool en de correcte Elco. Plaats J2 en J1 Controleer je werk op slechte soldeerverbindingen (het tin droogt dan mat op) en kortsluiting (tin-bruggen tussen twee pad's). De ESP01 word uiteindelijk in de socket geplaatst, maar moet eerst nog worden geflashed met de DSMRlogger2HTTP firmware en de data -map moet naar SPIFFS worden ge-upload voordat hij kan gaan loggen. Hoe dat moet staat hier en hier beschreven.","title":"Solderen"},{"location":"installatieArduinoIDE/","text":"Installatie ArduinoIDE Download en installeer de Arduino Integrated Development Environment (IDE) voor het Operating Systeem (OS) waar jouw DeskTop of LapTop computer (er zijn versies voor Windows, Linux en Mac) mee werkt. Je kunt de Software hier downloaden. Let op! De DSMRlogger2HTTP firmware is getest met de ArduinoIDE v1.8.8 en v1.8.9 Na het downloaden moet je het ontvangen bestand uitpakken (unzip of untar) en installeren. Dat installeren is per OS anders maar staat duidelijk op de website van Arduino aangegeven. Eenmaal ge\u00efnstalleerd kun je direct met de Arduino IDE aan de slag. Om de IDE met de ESP8266 microprocessor te kunnen gebruiken moeten we nog wat stappen uitvoeren. [RJ12 connector]","title":"ArduinoIDE"},{"location":"installatieArduinoIDE/#installatie-arduinoide","text":"Download en installeer de Arduino Integrated Development Environment (IDE) voor het Operating Systeem (OS) waar jouw DeskTop of LapTop computer (er zijn versies voor Windows, Linux en Mac) mee werkt. Je kunt de Software hier downloaden. Let op! De DSMRlogger2HTTP firmware is getest met de ArduinoIDE v1.8.8 en v1.8.9 Na het downloaden moet je het ontvangen bestand uitpakken (unzip of untar) en installeren. Dat installeren is per OS anders maar staat duidelijk op de website van Arduino aangegeven. Eenmaal ge\u00efnstalleerd kun je direct met de Arduino IDE aan de slag. Om de IDE met de ESP8266 microprocessor te kunnen gebruiken moeten we nog wat stappen uitvoeren. [RJ12 connector]","title":"Installatie ArduinoIDE"},{"location":"installatieBibliotheken/","text":"Installatie Bibliotheken hier vind je de offici\u00eble instructies voor het installeren van bibliotheken met de ArduinoIDE. Nu je een ArduinoIDE hebt waarmee je ESP8266\u2019s kunt programmeren (flashen) zul je ontdekken dat er door briljante mensen software is ontwikkeld die je kunt gebruiken om complexe projecten te realiseren, zonder dat je zelf het wiel hoeft uit te vinden. Deze software wordt veelal in de vorm van een bibliotheek aangeboden en je hoeft zo\u2019n bibliotheek alleen maar te installeren om er gebruik van te kunnen maken. Bijvoorbeeld een bibliotheek om je ESP8266 van een telnet server te voorzien (met een telnet server kun je via een telnet-client op je DeskTop of LapTop inloggen op je ESP8266). Er blijken hier een aantal bibliotheken voor te bestaan. Als voorbeeld nemen we TelnetStream van Juraj Andrassy . Na wat Googelen vinden we de software op deze https://github.com/jandrassy/TelnetStream/ github pagina. Om de bibliotheek te installeren klik je op de groene [Clone or Download] knop en selecteer je [Download ZIP] . Onthou waar je het zip-file bewaard! Ga nu naar de ArduinoIDE en selecteer: [ Sketch ] => [ Include Library ] => [ Add .ZIP Library ] Er verschijnt een selectie window waar je het zojuist ge-download-de bestand selecteert. Klik op [Choose] . De bibliotheek is nu ge\u00efnstalleerd en klaar om gebruikt te worden. De meeste bibliotheken komen met een aantal voorbeeld programma\u2019s waarmee je kunt leren hoe je de bibliotheek kunt gebruiken. Juraj Andrassy is erg summier met zijn uitleg maar gelukkig is er een map met voorbeelden (nou ja, \u00e9\u00e9n voorbeeld). (sorry, het plaatje is een beetje verknipt) Klik je nu op [ TelnetStreamTest ] dan wordt dit voorbeeld programma in de ArduinoIDE geladen. Installeer op dezelfde manier de bibliotheken die in het vorige hoofdstuk zijn genoemd. [DSMR Device Info]","title":"Installeren Bibliotheken"},{"location":"installatieBibliotheken/#installatie-bibliotheken","text":"hier vind je de offici\u00eble instructies voor het installeren van bibliotheken met de ArduinoIDE. Nu je een ArduinoIDE hebt waarmee je ESP8266\u2019s kunt programmeren (flashen) zul je ontdekken dat er door briljante mensen software is ontwikkeld die je kunt gebruiken om complexe projecten te realiseren, zonder dat je zelf het wiel hoeft uit te vinden. Deze software wordt veelal in de vorm van een bibliotheek aangeboden en je hoeft zo\u2019n bibliotheek alleen maar te installeren om er gebruik van te kunnen maken. Bijvoorbeeld een bibliotheek om je ESP8266 van een telnet server te voorzien (met een telnet server kun je via een telnet-client op je DeskTop of LapTop inloggen op je ESP8266). Er blijken hier een aantal bibliotheken voor te bestaan. Als voorbeeld nemen we TelnetStream van Juraj Andrassy . Na wat Googelen vinden we de software op deze https://github.com/jandrassy/TelnetStream/ github pagina. Om de bibliotheek te installeren klik je op de groene [Clone or Download] knop en selecteer je [Download ZIP] . Onthou waar je het zip-file bewaard! Ga nu naar de ArduinoIDE en selecteer: [ Sketch ] => [ Include Library ] => [ Add .ZIP Library ] Er verschijnt een selectie window waar je het zojuist ge-download-de bestand selecteert. Klik op [Choose] . De bibliotheek is nu ge\u00efnstalleerd en klaar om gebruikt te worden. De meeste bibliotheken komen met een aantal voorbeeld programma\u2019s waarmee je kunt leren hoe je de bibliotheek kunt gebruiken. Juraj Andrassy is erg summier met zijn uitleg maar gelukkig is er een map met voorbeelden (nou ja, \u00e9\u00e9n voorbeeld). (sorry, het plaatje is een beetje verknipt) Klik je nu op [ TelnetStreamTest ] dan wordt dit voorbeeld programma in de ArduinoIDE geladen. Installeer op dezelfde manier de bibliotheken die in het vorige hoofdstuk zijn genoemd. [DSMR Device Info]","title":"Installatie Bibliotheken"},{"location":"installatieDataUploadTool/","text":"Installatie Data Upload Tool E\u00e9n van de mooie eigenschappen van de ESP8266 is dat er flash geheugen in zit. Flash geheugen is geheugen dat zijn inhoud ook zonder spanning behoud. Vergelijk het met een SD-kaart. Het flash geheugen is, afhankelijk van het bordje, 512kB tot 16MB(!) groot. Een deel van dit flash geheugen wordt gebruikt om jouw programma in op te slaan. Wat er over blijft kan als bestand-systeem worden ingericht (het zgn. SPI Flash File Systeem \u2011SPIFFS\u2011). Je kunt in je programma dit bestand-systeem niet alleen gebruiken om (bijvoorbeeld meet-) gegevens maar ook om de inhoud van een web-pagina ( index.html ) of een configuratie-bestand in op te slaan. Een index.html maakt dan natuurlijk onderdeel uit van je programma maar deze ontwikkel je niet met de ArduinoIDE. Om het SPI Flash File Systeem voor dit soort bestanden te kunnen gebruiken moet je een plug-in in je Arduino Projecten map installeren. De plug-in haal je hier vandaan. Download vervolgens het ESP8266FS-0.4.0.zip bestand door er op te klikken. En bewaar het bestand op een plek die voor jou handig is. Ga nu naar je Sketchbook Location map en maak daarin een nieuwe map tools aan (als deze nog niet bestaat). Pak het zojuist ge-download-de zip bestand uit in deze tools map. Er wordt nu een aantal nieuwe mappen aangemaakt waar de plug-in wordt neergezet. Het pad ziet er ongeveer zo uit: <sketchbook location>/tools/ESP8266FS/tool/esp8266fs.jar Start de Arduino IDE opnieuw op. Op de menu-balk zie je nu onder [ Tools ] een nieuwe optie: ESP8266 Sketch Data Upload . Als er onder de map van je Sketch \u00f3\u00f3k een map data staat, dan kun je de bestanden die in deze data -map staan met het Sketch Data Upload tool naar het SPIFFS van de ESP8266 flashen. De bestands-tree van de DSMRlogger2HTTP firmware ziet er zo uit: Het ESP8266 Sketch Data Upload tool zal alle bestanden dit in de data -map zitten naar het SPIFFS van de aangesloten ESP8266 uploaden. Ga naar: [ tools ] -> [ ESP8266 Sketch Data Upload ] Randvoorwaarde is natuurlijk dat het SPIFFS groot genoeg is! In de selectie van je board moet je, behalve het juiste type board ook aangeven hoeveel ruimte van je Flash geheugen je wilt gebruiken voor het bestand-systeem (v\u00f3\u00f3rdat je je programma naar de ESP8266 upload!). Normaliter zou je dit zo groot mogelijk willen maken, maar als je \u201cOver The Air\u201d programma\u2019s op je ESP8266 wilt zetten (dus zonder fysieke verbinding maar via WiFi) dan moet je er rekening mee houden dat je twee maal de grootte van je programma nodig hebt om dit te kunnen doen. Wat er overblijft kun je als bestand-systeem gebruiken. [ChartFinancieel]","title":"Data Upload Tool"},{"location":"installatieDataUploadTool/#installatie-data-upload-tool","text":"E\u00e9n van de mooie eigenschappen van de ESP8266 is dat er flash geheugen in zit. Flash geheugen is geheugen dat zijn inhoud ook zonder spanning behoud. Vergelijk het met een SD-kaart. Het flash geheugen is, afhankelijk van het bordje, 512kB tot 16MB(!) groot. Een deel van dit flash geheugen wordt gebruikt om jouw programma in op te slaan. Wat er over blijft kan als bestand-systeem worden ingericht (het zgn. SPI Flash File Systeem \u2011SPIFFS\u2011). Je kunt in je programma dit bestand-systeem niet alleen gebruiken om (bijvoorbeeld meet-) gegevens maar ook om de inhoud van een web-pagina ( index.html ) of een configuratie-bestand in op te slaan. Een index.html maakt dan natuurlijk onderdeel uit van je programma maar deze ontwikkel je niet met de ArduinoIDE. Om het SPI Flash File Systeem voor dit soort bestanden te kunnen gebruiken moet je een plug-in in je Arduino Projecten map installeren. De plug-in haal je hier vandaan. Download vervolgens het ESP8266FS-0.4.0.zip bestand door er op te klikken. En bewaar het bestand op een plek die voor jou handig is. Ga nu naar je Sketchbook Location map en maak daarin een nieuwe map tools aan (als deze nog niet bestaat). Pak het zojuist ge-download-de zip bestand uit in deze tools map. Er wordt nu een aantal nieuwe mappen aangemaakt waar de plug-in wordt neergezet. Het pad ziet er ongeveer zo uit: <sketchbook location>/tools/ESP8266FS/tool/esp8266fs.jar Start de Arduino IDE opnieuw op. Op de menu-balk zie je nu onder [ Tools ] een nieuwe optie: ESP8266 Sketch Data Upload . Als er onder de map van je Sketch \u00f3\u00f3k een map data staat, dan kun je de bestanden die in deze data -map staan met het Sketch Data Upload tool naar het SPIFFS van de ESP8266 flashen. De bestands-tree van de DSMRlogger2HTTP firmware ziet er zo uit: Het ESP8266 Sketch Data Upload tool zal alle bestanden dit in de data -map zitten naar het SPIFFS van de aangesloten ESP8266 uploaden. Ga naar: [ tools ] -> [ ESP8266 Sketch Data Upload ] Randvoorwaarde is natuurlijk dat het SPIFFS groot genoeg is! In de selectie van je board moet je, behalve het juiste type board ook aangeven hoeveel ruimte van je Flash geheugen je wilt gebruiken voor het bestand-systeem (v\u00f3\u00f3rdat je je programma naar de ESP8266 upload!). Normaliter zou je dit zo groot mogelijk willen maken, maar als je \u201cOver The Air\u201d programma\u2019s op je ESP8266 wilt zetten (dus zonder fysieke verbinding maar via WiFi) dan moet je er rekening mee houden dat je twee maal de grootte van je programma nodig hebt om dit te kunnen doen. Wat er overblijft kun je als bestand-systeem gebruiken. [ChartFinancieel]","title":"Installatie Data Upload Tool"},{"location":"installatieESP8266core/","text":"Installatie ESP8266 core In de Arduino IDE moet bij \u201cInstellingen\u201d de volgende URL worden ingevoerd achter \u201c Additional Boards Manager URL\u2019s: \u201d (zie rood omlijnde kader) http://arduino.esp8266.com/stable/package_esp8266com_index.json Lees vooral de uitleg in het README.md bestand en de uitgebreide documentatie op hun website! Er kunnen meer additional board manager URL\u2019s worden ingevuld. Je moet ze dan achter elkaar zetten en scheiden door een komma ( , ). Eventueel kun je ook het pad waar je projecten staan (de Sketchbook Location ) aanpassen. Standaard verwijst deze naar je Documenten map: C:\\Users\\<LogInNaam>\\Documents\\arduino\\ .. en dat is een prima plek! De andere instellingen kun je naar behoefte aanpassen. Hierboven staan de instellingen die ik prettig vind. Na het maken van aanpassingen klik je op [OK]. Ga nu via de ArduinoIDE menu-balk naar [ Tools ] -> [ Board ] -> [ Boards Manager ]. Voer bij filter \u201cesp8266\u201d in. Selecteer de versie die je wilt gaan gebruiken en klik op [ Install ]. Let op! De DSMRlogger2HTTP firmware is getest met versie 2.4.0 en versie 2.5.0 . [ScreenShot DSMR Uur]","title":"ESP8266 Core"},{"location":"installatieESP8266core/#installatie-esp8266-core","text":"In de Arduino IDE moet bij \u201cInstellingen\u201d de volgende URL worden ingevoerd achter \u201c Additional Boards Manager URL\u2019s: \u201d (zie rood omlijnde kader) http://arduino.esp8266.com/stable/package_esp8266com_index.json Lees vooral de uitleg in het README.md bestand en de uitgebreide documentatie op hun website! Er kunnen meer additional board manager URL\u2019s worden ingevuld. Je moet ze dan achter elkaar zetten en scheiden door een komma ( , ). Eventueel kun je ook het pad waar je projecten staan (de Sketchbook Location ) aanpassen. Standaard verwijst deze naar je Documenten map: C:\\Users\\<LogInNaam>\\Documents\\arduino\\ .. en dat is een prima plek! De andere instellingen kun je naar behoefte aanpassen. Hierboven staan de instellingen die ik prettig vind. Na het maken van aanpassingen klik je op [OK]. Ga nu via de ArduinoIDE menu-balk naar [ Tools ] -> [ Board ] -> [ Boards Manager ]. Voer bij filter \u201cesp8266\u201d in. Selecteer de versie die je wilt gaan gebruiken en klik op [ Install ]. Let op! De DSMRlogger2HTTP firmware is getest met versie 2.4.0 en versie 2.5.0 . [ScreenShot DSMR Uur]","title":"Installatie ESP8266 core"},{"location":"introductie/","text":"Introductie Dit is de documentatie voor de DSMR-logger v2 en v3 en de DSMRlogger2HTTP firmware. Ga voor de volledige project beschrijving naar www.aandewiel.nl Het idee Zo langzamerhand zijn alle huizen in Nederland uitgerust met een \u201cSlimme Meter\u201d. Deze meters beschikken over een \"P1\" poort, deze poort kan worden uitgelezen. Dit project stelt je in staat dit zelf thuis uit te lezen en de gegevens op een door jouw gewenst formaat te presenteren dmv een \"DSMR logger\". Er zijn commerciele P1 oplossingen beschikbaar, dit project geeft je aanzienlijk meer controle over de kosten en de gegevens. DSMR is een acroniem voor Dutch Smart Meter Requirements De doelstellingen van de DSMR logger project zijn: Moet eenvoudig en goedkoop gemaakt kunnen worden; Moet \u201cOver The Air\u201d ge-update kunnen worden; Moet een beperkte historie hebben die intern opgeslagen wordt; Moet via een externe terminal benaderd kunnen worden (telnet); Moet via een browser de gegevens kunnen presenteren; Moet via een REST API de gegevens kunnen leveren; Moet gegevens eenvoudig verder laten verwerken. De DSMR-logger is een hardware en software systeem waarmee de Slimme Meter (vanaf DSMR versie 4.0) kan worden uitgelezen. De uitgelezen data (telegrammen) worden in de DSMR-logger opgeslagen en kunnen in de vorm van tabellen en charts, via WiFi, op een computer of tablet worden weergegeven. Begrippen In dit document worden de volgende begrippen gebruikt: Begrip Omschrijving DSMR-logger de Hardware DSMR-logger v2 (of Versie 2) Versie 2 van de Hardware Dit is de hardware van de DSMR-logger die is uitgerust met een ESP-01 (Black/S) bordje. Voor deze versie is de firmware DSMRlogger2HTTP bedoeld. DSMR-logger v3 (of Versie 3) Versie 3 van de Hardware Verder gelijk aan Versie 2. DSMRlogger2HTTP De firmware voor de DSMR-logger v2 en v3 ESP-01 Een bordje met een ESP8266 processor en 512KB flash geheugen Dit bordje is niet geschikt voor dit project ESP-01 (Black) Een ESP-01 met 1MB flash geheugen Dit bordje heeft een rode Power Led en een blauwe Led op GPIO-01 ESP-01S Een ESP-01 met 1MB flash geheugen Dit bordje heeft alleen een blauwe Led op GPIO-02 ESP-01(Black/S) Een ESP-01 Black of ESP-01S DSMR-logger v2 en v3 maken gebruik van dit bordje Een volledige beschrijving van dit project kun je hier: www.aandewiel.nl vinden. [DSMRlogger v2]","title":"Introductie"},{"location":"introductie/#introductie","text":"Dit is de documentatie voor de DSMR-logger v2 en v3 en de DSMRlogger2HTTP firmware. Ga voor de volledige project beschrijving naar www.aandewiel.nl","title":"Introductie"},{"location":"introductie/#het-idee","text":"Zo langzamerhand zijn alle huizen in Nederland uitgerust met een \u201cSlimme Meter\u201d. Deze meters beschikken over een \"P1\" poort, deze poort kan worden uitgelezen. Dit project stelt je in staat dit zelf thuis uit te lezen en de gegevens op een door jouw gewenst formaat te presenteren dmv een \"DSMR logger\". Er zijn commerciele P1 oplossingen beschikbaar, dit project geeft je aanzienlijk meer controle over de kosten en de gegevens. DSMR is een acroniem voor Dutch Smart Meter Requirements De doelstellingen van de DSMR logger project zijn: Moet eenvoudig en goedkoop gemaakt kunnen worden; Moet \u201cOver The Air\u201d ge-update kunnen worden; Moet een beperkte historie hebben die intern opgeslagen wordt; Moet via een externe terminal benaderd kunnen worden (telnet); Moet via een browser de gegevens kunnen presenteren; Moet via een REST API de gegevens kunnen leveren; Moet gegevens eenvoudig verder laten verwerken. De DSMR-logger is een hardware en software systeem waarmee de Slimme Meter (vanaf DSMR versie 4.0) kan worden uitgelezen. De uitgelezen data (telegrammen) worden in de DSMR-logger opgeslagen en kunnen in de vorm van tabellen en charts, via WiFi, op een computer of tablet worden weergegeven. Begrippen In dit document worden de volgende begrippen gebruikt: Begrip Omschrijving DSMR-logger de Hardware DSMR-logger v2 (of Versie 2) Versie 2 van de Hardware Dit is de hardware van de DSMR-logger die is uitgerust met een ESP-01 (Black/S) bordje. Voor deze versie is de firmware DSMRlogger2HTTP bedoeld. DSMR-logger v3 (of Versie 3) Versie 3 van de Hardware Verder gelijk aan Versie 2. DSMRlogger2HTTP De firmware voor de DSMR-logger v2 en v3 ESP-01 Een bordje met een ESP8266 processor en 512KB flash geheugen Dit bordje is niet geschikt voor dit project ESP-01 (Black) Een ESP-01 met 1MB flash geheugen Dit bordje heeft een rode Power Led en een blauwe Led op GPIO-01 ESP-01S Een ESP-01 met 1MB flash geheugen Dit bordje heeft alleen een blauwe Led op GPIO-02 ESP-01(Black/S) Een ESP-01 Black of ESP-01S DSMR-logger v2 en v3 maken gebruik van dit bordje Een volledige beschrijving van dit project kun je hier: www.aandewiel.nl vinden. [DSMRlogger v2]","title":"Het idee"},{"location":"uploadDataMap_ESP-01/","text":"upload Data map naar ESP-01 De data -map van de DSMRlogger2HTTP firmware kan zowel via een programmer als Over The Air naar de ESP-01 worden overgezet. Je kunt hier een uitvoerige post vinden over hoe je zelf een eenvoudige programmer voor de ESP-01 kunt maken en hoe je die vervolgens moet gebruiken om de DSMRlogger2HTTP firmware en data -map naar de ESP-01 te uploaden. Uiteraard kun je hiervoor ook iedere andere geschikte programmer gebruiken! Als je de ESP-01 op de programmer hebt aangesloten en deze staat in \"Flash-Mode\" ga dan in de Arduino IDE naar Tools -> ESP8266 Sketch Data Upload SPIFFS wordt nu leeg gemaakt en alle bestanden in de data -map worden naar het SPIFFS overgezet. Hierna zal de DSMR-logger normaal opstarten, maar met de nieuw SPIFFS inhoud. Let op! Hou er rekening mee dat eventuele data-bestanden die al op SPIFFS stonden nu weg zijn! Als je ze niet kwijt wil moet je er eerst een kopie van maken op je computer en deze, na het flashen van SPIFFS weer terug zetten (dat kan met behulp van de /onderhoud pagina)! [DSMR-logger v3]","title":"Data Flashen naar ESP-01"},{"location":"uploadDataMap_ESP-01/#upload-data-map-naar-esp-01","text":"De data -map van de DSMRlogger2HTTP firmware kan zowel via een programmer als Over The Air naar de ESP-01 worden overgezet. Je kunt hier een uitvoerige post vinden over hoe je zelf een eenvoudige programmer voor de ESP-01 kunt maken en hoe je die vervolgens moet gebruiken om de DSMRlogger2HTTP firmware en data -map naar de ESP-01 te uploaden. Uiteraard kun je hiervoor ook iedere andere geschikte programmer gebruiken! Als je de ESP-01 op de programmer hebt aangesloten en deze staat in \"Flash-Mode\" ga dan in de Arduino IDE naar Tools -> ESP8266 Sketch Data Upload SPIFFS wordt nu leeg gemaakt en alle bestanden in de data -map worden naar het SPIFFS overgezet. Hierna zal de DSMR-logger normaal opstarten, maar met de nieuw SPIFFS inhoud. Let op! Hou er rekening mee dat eventuele data-bestanden die al op SPIFFS stonden nu weg zijn! Als je ze niet kwijt wil moet je er eerst een kopie van maken op je computer en deze, na het flashen van SPIFFS weer terug zetten (dat kan met behulp van de /onderhoud pagina)! [DSMR-logger v3]","title":"upload Data map naar ESP-01"},{"location":"uploadFirmware_ESP-01/","text":"Firmware naar ESP-01 Flashen Om de firmware naar de ESP-01 (Black/S) te kunnen flashen moet deze eerst voor deze ESP-01 geschikt worden gemaakt. Dit doen we door v\u00f3\u00f3r de #define HAS_NO_METER twee slashes ( // ) te zetten. /******************** change this for testing only **********************************/ // #define HAS_NO_METER // define if No \"Slimme Meter\" is attached /******************** don't change enything below this comment **********************/ Vervolgens moeten de [ Boards ] settings als volgt worden ingevuld: Instelling Waarde Board \"Generic ESP8266 Module\" Upload Speed \"115200\" CPU Frequency \"80MHz\" Flash Frequency \"40MHz\" Flash Mode \"DOUT (compatible)\" Flash Size \"1M (256K SPIFFS)\" Crystal Frequency \"26MHz\" Reset Method \"None\" Debug Port \"Disabled\" Debug Level \"None\" IwIP Variant \"v2 Lower Memory\" VTables \"Flash\" Exeptions \"Disabled\" Builtin Led ESP-01 (Black): \"1\" ESP-01S: \"2\" Erase Flash \"Only Sketch\" (First Time: \"All Flash Contents\") Port Bedraad: \"Serial Port\" OTA: \"Netwerk Port\" Stop de ESP-01 in de programmer ( hier vind je een post over hoe je van een USB to ESP-01 Adapter zelf eenvoudig een programmer kunt maken) en sluit deze aan op je computer. Vergeet niet de juiste Port te selecteren en druk op het Compile and Upload icoon . [DSMR Onderhoud]","title":"Firmware Flashen naar ESP-01"},{"location":"uploadFirmware_ESP-01/#firmware-naar-esp-01-flashen","text":"Om de firmware naar de ESP-01 (Black/S) te kunnen flashen moet deze eerst voor deze ESP-01 geschikt worden gemaakt. Dit doen we door v\u00f3\u00f3r de #define HAS_NO_METER twee slashes ( // ) te zetten. /******************** change this for testing only **********************************/ // #define HAS_NO_METER // define if No \"Slimme Meter\" is attached /******************** don't change enything below this comment **********************/ Vervolgens moeten de [ Boards ] settings als volgt worden ingevuld: Instelling Waarde Board \"Generic ESP8266 Module\" Upload Speed \"115200\" CPU Frequency \"80MHz\" Flash Frequency \"40MHz\" Flash Mode \"DOUT (compatible)\" Flash Size \"1M (256K SPIFFS)\" Crystal Frequency \"26MHz\" Reset Method \"None\" Debug Port \"Disabled\" Debug Level \"None\" IwIP Variant \"v2 Lower Memory\" VTables \"Flash\" Exeptions \"Disabled\" Builtin Led ESP-01 (Black): \"1\" ESP-01S: \"2\" Erase Flash \"Only Sketch\" (First Time: \"All Flash Contents\") Port Bedraad: \"Serial Port\" OTA: \"Netwerk Port\" Stop de ESP-01 in de programmer ( hier vind je een post over hoe je van een USB to ESP-01 Adapter zelf eenvoudig een programmer kunt maken) en sluit deze aan op je computer. Vergeet niet de juiste Port te selecteren en druk op het Compile and Upload icoon . [DSMR Onderhoud]","title":"Firmware naar ESP-01 Flashen"},{"location":"verschillenESP-01/","text":"Verschillen ESP-01 ESP-01 ESP-01 (Black Edition) ESP-01S ESP-01 De ESP-01 heeft slechts 512MB flash geheugen en is niet geschikt voor de DSMR-logger ESP-01 (Black Edition) Dit is de versie van de ESP8266 waar versie 2 en 3 van de DSMR-logger op zijn gebaseerd. Deze versie heeft een rode power led en een blauwe led die op GPIO-01 is aangesloten. Deze versie heeft 1MB flash geheugen en is geschikt voor de DSMRlogger2HTTP firmware. ESP-01S Oorspronkelijk had deze ESP-01 ook slecht 512MB flash geheugen. De versie die nu meestal verkocht wordt heeft echter 1MB geheugen. Het is dus wel zaak op te letten wat voor versie je koopt! De ESP-01S heeft geen power led en de blauwe led is niet op GPIO-01 maar op GPIO-02 aangesloten. Deze versie van de ESP-01 is geschikt voor de DSMRlogger2HTTP firmware. [BOM]","title":"Verschillen ESP-01 modules"},{"location":"verschillenESP-01/#verschillen-esp-01","text":"ESP-01 ESP-01 (Black Edition) ESP-01S","title":"Verschillen ESP-01"},{"location":"verschillenESP-01/#esp-01","text":"De ESP-01 heeft slechts 512MB flash geheugen en is niet geschikt voor de DSMR-logger","title":"ESP-01"},{"location":"verschillenESP-01/#esp-01-black-edition","text":"Dit is de versie van de ESP8266 waar versie 2 en 3 van de DSMR-logger op zijn gebaseerd. Deze versie heeft een rode power led en een blauwe led die op GPIO-01 is aangesloten. Deze versie heeft 1MB flash geheugen en is geschikt voor de DSMRlogger2HTTP firmware.","title":"ESP-01 (Black Edition)"},{"location":"verschillenESP-01/#esp-01s","text":"Oorspronkelijk had deze ESP-01 ook slecht 512MB flash geheugen. De versie die nu meestal verkocht wordt heeft echter 1MB geheugen. Het is dus wel zaak op te letten wat voor versie je koopt! De ESP-01S heeft geen power led en de blauwe led is niet op GPIO-01 maar op GPIO-02 aangesloten. Deze versie van de ESP-01 is geschikt voor de DSMRlogger2HTTP firmware. [BOM]","title":"ESP-01S"}]}